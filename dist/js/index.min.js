function cmpTabs(e) {
    const t = e,
        r = t.querySelector(".tabs__nav"),
        i = r.querySelectorAll(".tabs__nav-link"),
        n = t.querySelectorAll(".tabs__content"),
        s = (e, t) => {
            t.focus(), t.removeAttribute("tabindex"), t.setAttribute("aria-selected", "true"), e.removeAttribute("aria-selected"), e.setAttribute("tabindex", "-1");
            let r = Array.prototype.indexOf.call(i, t),
                s = Array.prototype.indexOf.call(i, e);
            n[s].hidden = !0, n[r].hidden = !1, projectsSwiperButtons()
        };
    r.setAttribute("role", "tablist"), Array.prototype.forEach.call(i, (e, t) => {
        e.setAttribute("role", "tab"), e.setAttribute("id", "tab" + (t + 1)), e.setAttribute("tabindex", "-1"), e.parentNode.setAttribute("role", "presentation"), e.addEventListener("click", e => {
            e.preventDefault();
            let t = r.querySelector("[aria-selected]");
            e.currentTarget !== t && s(t, e.currentTarget)
        }), e.addEventListener("keydown", e => {
            let r = Array.prototype.indexOf.call(i, e.currentTarget),
                l = 37 === e.which ? r - 1 : 39 === e.which ? r + 1 : 40 === e.which ? "down" : null;
            null !== l && (e.preventDefault(), "down" === l ? n[t].focus() : i[l] && s(e.currentTarget, i[l]))
        })
    }), Array.prototype.forEach.call(n, (e, t) => {
        e.setAttribute("role", "tabpanel"), e.setAttribute("tabindex", "-1"), e.getAttribute("id"), e.setAttribute("aria-labelledby", i[t].id), e.hidden = !0
    }), i[1].removeAttribute("tabindex"), i[1].setAttribute("aria-selected", "true"), n[1].hidden = !1
} ! function () {
    "use strict";
    let e = document.querySelectorAll(".form-group");
    Array.prototype.forEach.call(e, e => {
        let t = e.querySelector(".form-group__input");
        e.querySelector(".form-group__label"), t.addEventListener("focus", t => {
            t.preventDefault(), e.classList.add("form-group--filled")
        }), t.addEventListener("blur", r => {
            "" === t.value && e.classList.remove("form-group--filled")
        })
    })
}(), document.addEventListener("DOMContentLoaded", function () {
    new ScrollTrigger({
        toggle: {
            visible: "visible",
            hidden: "hidden"
        },
        offset: {
            x: 0,
            y: -400
        },
        addHeight: !0,
        once: !0
    }, document.body, window)
}), projectsSwiper = new Swiper(".js-projects-tabs-list", {
    slidesPerView: 3,
    spaceBetween: 16,
    slideActiveClass: "active",
    slideNextClass: "next",
    slidePrevClass: "prev",
    navigation: {
        nextEl: ".projects-slider .nav-btn--next",
        prevEl: ".projects-slider .nav-btn--prev",
        disabledClass: "nav-btn--disabled",
        hiddenClass: "nav-btn--hidden"
    },
    on: {
        init: function () {
            setTimeout(function () {
                let e = $(".projects-slider .tabs__content:not([hidden])").find(".swiper-wrapper .swiper-slide.active").next(".swiper-slide"),
                    t = 0;
                for (; e.length;) t += e.outerWidth(!0), e = e.next(".swiper-slide");
                t > $(document).outerWidth(!0) && $(".projects-slider .nav-btn--next").removeClass("nav-btn--disabled")
            }, 100)
        },
        slideChange: function () {
            setTimeout(projectsSwiperButtons, 70)
        }
    },
    breakpoints: {
        1023: {
            slidesPerView: 2,
            slidesOffsetBefore: 0
        },
        479: {
            slidesPerView: 1,
            slidesOffsetBefore: 0
        }
    }
}), document.querySelectorAll(".tabs").forEach(e => {
    cmpTabs(e)
}), new Swiper("#tourSlider", {
    slidesPerView: 3,
    spaceBetween: 16,
    slideActiveClass: "active",
    slideNextClass: "next",
    slidePrevClass: "prev",
    navigation: {
        nextEl: "#tourSlider .nav-btn--next",
        prevEl: "#tourSlider .nav-btn--prev",
        disabledClass: "nav-btn--disabled",
        hiddenClass: "nav-btn--hidden"
    },
    on: {
        init: function () {
            let e = this;
            setTimeout(function () {
                e.isEnd || $("#tourSlider .nav-btn--next").removeClass("nav-btn--disabled")
            }, 100)
        },
        slideChange: function () {
            let e = this;
            setTimeout(function () {
                e.isEnd || $("#tourSlider .nav-btn--next").removeClass("nav-btn--disabled"), e.isBeginning || $("#tourSlider .nav-btn--prev").removeClass("nav-btn--disabled")
            }, 70)
        }
    },
    breakpoints: {
        1023: {
            slidesPerView: 2,
            slidesOffsetBefore: 60
        },
        767: {
            slidesPerView: 1,
            slidesOffsetBefore: 0
        }
    }
}), new Swiper("#reviewsSlider", {
    slideActiveClass: "reviews-slider__slide--active",
    slideNextClass: "next",
    slidePrevClass: "prev",
    slidesPerView: 4,
    spaceBetween: 16,
    navigation: {
        nextEl: ".nav-btn--next",
        prevEl: ".nav-btn--prev",
        disabledClass: "nav-btn--disabled",
        hiddenClass: "nav-btn--hidden"
    },
    breakpoints: {
        1023: {
            slidesPerView: 2,
        },
        767: {
            slidesPerView: 1,
        }
    }
}), new Swiper("#mainGallery", {
    slidesPerView: 1,
    speed: 500,
    loop: true,
    watchSlidesProgress: true,
    navigation: {
        nextEl: ".nav-btn--next",
        prevEl: ".nav-btn--prev",
        disabledClass: "nav-btn--disabled",
        hiddenClass: "nav-btn--hidden"
    },
    pagination: {
        el: ".nav-dots",
        bulletClass: "nav-dots__bullet",
        bulletActiveClass: "nav-dots__bullet--active",
        hiddenClass: "nav-dots--hidden",
        clickableClass: "nav-dots--clickable",
        clickable: !0
    },
    on: {
        init: function () {
            progressLoop = {
                intervalTime: 10000,
                progressTimeDivider: 1000,
                progressTime: NaN,

                loopInterval: null,
                loopStep: null,
                isLoopPaused: true,

                stopLoop: function () {
                    clearInterval(this.loopInterval);
                    this.isLoopPaused = true;
                },
                resetLoop: function () {
                    this.stopLoop();

                    this.initLoop();
                },
                initLoop: function () {
                    let self = this;

                    this.loopInterval = setInterval(
                        function () {
                            self.loopStep(self)
                        },
                        this.intervalTime
                    );
                    self.isLoopPaused = false;
                },

                progressInterval: null,
                progressStep: null,
                isProgressPaused: true,

                stopProgress: function () {
                    clearInterval(this.progressInterval);
                    this.isProgressPaused = true;
                },
                resetProgress: function () {
                    this.stopProgress();

                    this.initProgress();
                },
                initProgress: function () {
                    let self = this;

                    this.progressInterval = setInterval(
                        function () {
                            self.progressStep(self)
                        },
                        this.progressTime
                    );
                    self.progressStep(self);
                    self.isProgressPaused = false;
                },

                init: function () {
                    this.progressTime = this.intervalTime / this.progressTimeDivider;

                    this.initLoop();
                    this.initProgress();
                }
            };

            progressLoop.loopStep = function (progressLoop) {
                document.querySelector('#mainGallery').swiper.slideNext(500, true)
            };

            // progress
            progressLoop.progressStep = function (progressLoop) {
                let progress = $('#mainGallery .progress');
                let fullWidth = progress.outerWidth();
                let progressBar = progress.find('.progress-bar');

                progressBar.css('width', (progressBar.outerWidth() + fullWidth / progressLoop.progressTimeDivider) + 'px');
                progressBar.css('transition', 'width ' + (progressLoop.progressTime / 1000) + 's linear');
            };

            document.querySelector('#mainGallery').swiper.progressLoop = progressLoop;
            document.querySelector('#mainGallery').swiper.progressLoop.init();
        },
        slideChange: function () {
            let progressBar = $('#mainGallery .progress > .progress-bar');
            let progressLoop = document.querySelector('#mainGallery').swiper.progressLoop;

            progressBar.css('transition', 'none');
            progressBar.css('width', '0px');

            if (progressLoop) {
                progressLoop.resetProgress();
                progressLoop.resetLoop();
            }
        },
        touchStart: function () {
            let progressLoop = document.querySelector('#mainGallery').swiper.progressLoop;

            if (progressLoop) {
                progressLoop.stopProgress();
                progressLoop.stopLoop();
            }
        },
        touchEnd: function () {
            let progressLoop = document.querySelector('#mainGallery').swiper.progressLoop;

            if (progressLoop) {
                progressLoop.initProgress();
                progressLoop.initLoop();
            }
        }
    }
}), 
new SmoothScroll('a[data-scroll][href*="#"]'), 
window.addEventListener("load", function () {
    new Rellax(".js-section-parallax", {
        speed: -5,
        center: !0
    }), 
    new Rellax(".js-title-parallax", {
        speed: -1,
        center: !0
    })
});
let projectsSwiperButtons = function () {
    let e = $(".projects-slider .tabs__content:not([hidden])").find(".swiper-wrapper .swiper-slide.active"),
        t = e.next(".swiper-slide"),
        r = 0;
    for (; t.length;) r += t.outerWidth(!0), t = t.next(".swiper-slide");
    r > $(document).outerWidth(!0) ? $(".projects-slider .nav-btn--next").removeClass("nav-btn--disabled") : $(".projects-slider .nav-btn--next").addClass("nav-btn--disabled"), e.prev(".swiper-slide").length && $(".projects-slider .nav-btn--prev").removeClass("nav-btn--disabled")
};